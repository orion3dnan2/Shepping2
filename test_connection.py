#!/usr/bin/env python3
"""
ุงุฎุชุจุงุฑ ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช PostgreSQL ูู Render
"""
import os
import psycopg2
from urllib.parse import urlparse

def test_database_connection():
    """ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    database_url = os.environ.get("DATABASE_URL")
    
    if not database_url:
        print("โ DATABASE_URL ุบูุฑ ููุฌูุฏ ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ")
        return False
    
    # ุชุญููู ุฑุงุจุท ูุงุนุฏุฉ ุงูุจูุงูุงุช
    try:
        if database_url.startswith("postgres://"):
            database_url = database_url.replace("postgres://", "postgresql://", 1)
        
        parsed = urlparse(database_url)
        print(f"๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู: {parsed.hostname}:{parsed.port}")
        print(f"๐ ูุงุนุฏุฉ ุงูุจูุงูุงุช: {parsed.path[1:]}")
        print(f"๐ค ุงููุณุชุฎุฏู: {parsed.username}")
        
        # ูุญุงููุฉ ุงูุงุชุตุงู
        conn = psycopg2.connect(database_url)
        cursor = conn.cursor()
        
        # ุงุฎุชุจุงุฑ ุงุณุชุนูุงู ุจุณูุท
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        print(f"โ ุงุชุตุงู ูุงุฌุญ! ุฅุตุฏุงุฑ PostgreSQL: {version[0][:50]}...")
        
        # ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฌุฏูู
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS test_table (
                id SERIAL PRIMARY KEY,
                message TEXT
            );
        """)
        
        cursor.execute("INSERT INTO test_table (message) VALUES ('Test connection successful');")
        conn.commit()
        
        cursor.execute("SELECT COUNT(*) FROM test_table;")
        count = cursor.fetchone()
        print(f"๐ ุนุฏุฏ ุงูุณุฌูุงุช ูู ุฌุฏูู ุงูุงุฎุชุจุงุฑ: {count[0]}")
        
        # ุชูุธูู
        cursor.execute("DROP TABLE test_table;")
        conn.commit()
        
        cursor.close()
        conn.close()
        
        print("๐ ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช ููุชูู ุจูุฌุงุญ!")
        return True
        
    except Exception as e:
        print(f"โ ูุดู ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช: {str(e)}")
        print(f"๐ง ููุน ุงูุฎุทุฃ: {type(e).__name__}")
        return False

if __name__ == "__main__":
    print("๐ ุจุฏุก ุงุฎุชุจุงุฑ ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช...")
    test_database_connection()